#+TITLE: Emacs configuration
:PROPERTIES:
#+AUTHOR: hoaxdream
#+STARTUP: fold
#+PROPERTY: header-args:emacs-lisp :results silent
#+HTML_HEAD: <link rel="stylesheet" href="https://sandyuraz.com/styles/org.min.css">
#+SEQ_TODO: TODO(t) | DISABLED(d)
:END:

* TODO Packages to try [0/0]
+ [ ] doom-themes
+ [ ] doom-modeline
+ [ ] toc-org
+ [ ] define-word
+ [ ] mw-thesaurus
+ [ ] general
* Meta
  This file contains my wip Emacs configuration.

** Exported file note
   The following is exported to the top of the tangled init.el file as a note.

#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;
  ;;; hoaxdream's Emacs Configuration
  ;;;

  ;; Copyright (C) hoaxdream
  ;; Author: hoaxdream
  ;; URL: https://github.com/hoaxdream
  ;; This file is not part of GNU Emacs.
  ;; This file is free software.

  ;; ------- The following code was auto-tangled from an Orgmode file. ------- ;;
#+END_SRC
* Packages
** Vim keys for emacs
#+BEGIN_SRC emacs-lisp :tangle yes
(use-package evil
    :ensure t
	:init
	(setq evil-want-C-i-jump nil)
    :config
    (evil-mode 1))
#+END_SRC

#+BEGIN_SRC emacs-lisp :tangle yes
(use-package which-key
    :config
    (setq which-key-idle-delay 0.3)
    (setq which-key-popup-type 'frame)
    (which-key-mode)
    (which-key-setup-minibuffer)
    (set-face-attribute 'which-key-local-map-description-face nil
        :weight 'bold)
    :ensure t)
#+END_SRC
** On-the-fly syntax checking.
#+BEGIN_SRC emacs-lisp :tangle yes
(use-package flycheck
    :ensure t
    :init
    (global-flycheck-mode t))
#+END_SRC
** Autocompletion
#+BEGIN_SRC emacs-lisp :tangle yes
(use-package auto-complete
    :ensure t
    :config
    (ac-config-default))
#+END_SRC
** Install gnuchess or crafty to play chess.
#+BEGIN_SRC emacs-lisp :tangle yes
(use-package chess
    :ensure t)
#+END_SRC
** Hide mode line
#+BEGIN_SRC emacs-lisp :tangle yes
  (use-package hide-mode-line
      :ensure t
      :commands (hide-mode-line-mode))
#+END_SRC
** Doom theme
#+BEGIN_SRC emacs-lisp :tangle yes
(use-package doom-themes
	:ensure t
    :config
    (load-theme 'doom-gruvbox t)
    (doom-themes-org-config))
#+END_SRC
** Dashboard
#+BEGIN_SRC emacs-lisp :tangle yes
  (use-package dashboard
      :init
      (setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))
      (add-hook 'after-init-hook 'dashboard-refresh-buffer)
      (add-hook 'dashboard-mode-hook 'hide-mode-line-mode)
      :config
      (dashboard-setup-startup-hook))
#+END_SRC
** Markdown
#+BEGIN_SRC emacs-lisp :tangle yes
(use-package markdown-mode
      :esure t
      :mode (("README\\.md\\'" . gfm-mode)
             ("\\.md\\'" . markdown-mode)
             ("\\.markdown\\'" . markdown-mode))
      :init (setq markdown-command "multimarkdown"))
#+END_SRC
* Org Mode
** Aesthetics
#+BEGIN_SRC emacs-lisp :tangle yes
;; Improved version of org-bullets
(use-package org-superstar
    :ensure t
    :config
    (add-hook 'org-mode-hook (lambda () (org-superstar-mode 1))))

(setq org-startup-indented t)              ;; Indent according to section
(setq org-startup-with-inline-images t)    ;; Display images in-buffer by default
#+END_SRC
** Evil-org for evil mode integration
This is very fancy, it treats org-mode elements (i.e. sections, source blocks, tables)
as regular text objects ( 'ae' object ). Additionally, it allows reordering stuff using
M-j, M-k, M-l and M-h instead of the regular M-<arrow keys>/
Operators that deal with indention ( < and > ) also indent headers.
#+BEGIN_SRC emacs-lisp :tangle yes
(use-package evil-org
    :ensure t
    :after (evil org)
    :config
    (add-hook 'org-mode-hook 'evil-org-mode)
    (add-hook 'evil-org-mode-hook
        (lambda ()
            (evil-org-set-key-theme '(navigation insert textobjects additional calendar))))
 (require 'evil-org-agenda)
 (evil-org-agenda-set-keys))
#+END_SRC

#+RESULTS:
: t
** Org-agenda
#+BEGIN_SRC emacs-lisp :tangle yes
(setq org-agenda-files '("~/.config/dev/rsync/org/personal.org"
                         "~/.config/dev/rsync/org/task.org"))
(setq org-agenda-compact-blocks t)
#+END_SRC
